name: Release
run-name: Release workflow
on:
  workflow_dispatch: # Allows manual triggering of workflow.
    inputs:
      release_type:
        description: "The type of release to perform"
        type: choice
        required: true
        options:
          - "major"
          - "minor"
          - "patch"
        default: "patch"
jobs:
  lint:
    uses: ./.github/workflows/lint.yml
  test:
    uses: ./.github/workflows/test.yml
  release:
    name: Release # This is not a separate wokflow because it should only run after linting and testing.
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/main' # Only run on main branch
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - run: |
          pip install .[release]
          git config --global user.name "GitHub Action"
          git config --global user.email "build_pipeline@novonordisk.com"
          git branch -c release
          git checkout release
          git push --set-upstream origin release
          python -m bumpver update --${{ inputs.release_type }}
          eval $(bumpver show --env) # Saving the new version in an environment variable
          gh pr create --title "Release $CURRENT_VERSION" --body "Release $CURRENT_VERSION" --base main --head release --repo ${{ github.repository }} --reviewer Release_reviewers --labels Release
          gh pr merge --rebase --delete-branch --admin
          gh release create $CURRENT_VERSION --title $CURRENT_VERSION --notes "Release $CURRENT_VERSION" --verify-tag
