name: Release
run-name: Release workflow
on:
  workflow_dispatch: # Allows manual triggering of workflow.
    inputs:
      release_type:
        description: "The type of release to perform"
        type: choice
        required: true
        options:
          - "major"
          - "minor"
          - "patch"
        default: "patch"
jobs:
  lint:
    uses: ./.github/workflows/lint.yml
  test:
    uses: ./.github/workflows/test.yml
  bump_version:
    name: Version bump, Github release and build # This is not a separate wokflow because it should only run after linting and testing.
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/main' # Only run on main branch
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - run: pip install .[release]
      - run: git config --global user.name "GitHub Action"
      - run: git config --global user.email "build_pipeline@novonordisk.com"
      - run: git branch -c release
      - run: git checkout release
      - run: git push --set-upstream origin release
      - run: python -m bumpver update --${{ inputs.release_type }}
      - run: |
          eval $(python -m bumpver show --env) # Saving the new version in an environment variable
          GIT_HASH=$(git rev-parse HEAD) # Saving the git hash in an environment variable
          gh pr create --title "Release $CURRENT_VERSION" --body "Release $CURRENT_VERSION" --base main --head release --repo ${{ github.repository }} --reviewer SRFU-NN
          gh pr merge --merge --delete-branch --auto
          gh release create $CURRENT_VERSION --title $CURRENT_VERSION --notes "Release $CURRENT_VERSION" --verify-tag --target $GIT_HASH
      - run: pip install .[build]
      - run: python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: dist/*.whl
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
  pypi_release:
    name: PyPI Release
    runs-on: ubuntu-latest
    needs: [bump_version]
    # Specifying an environment, since upload to PyPI is only allowed from the release
    # environment. NOTE: do NOT use this environemnt for anything else, including build,
    # as this would be a security risk.
    environment: release
    permissions:
      id-token: write
    steps:
      - name: Downloading wheel
        uses: actions/download-artifact@v4
        with:
          name: wheel
          path: dist/
      - name: Downloading sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/
      - name: Uploading to pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/
