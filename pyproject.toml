[project]
name = "Opti_HPLC_Handler"
version = "2.0.0"
description = "Simplified proxy API for interacting with the Waters Empower Web API."
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
  { name="SÃ¸ren Furbo", email="srfu@novonordisk.com" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Chemistry",
  "Topic :: Software Development :: Libraries :: Python Modules"
]
dependencies = [
  "keyring>=24.0.0",
  "requests>=2.28.1",
]
# dynamic = ["version"] Possibly to be implemented in the future

[project.optional-dependencies]
dev = [
  "black==23.3.0",
  "black[jupyter]==23.3.0",
  "flake8==6.1.0",
  "isort==5.12.0",
]
test = [
  "pytest==7.3.1",
  "pytest-cov==4.1.0"
]
lint = [
  "black==23.3.0",
  "black[jupyter]==23.3.0",
  "flake8==6.1.0",
  "isort==5.12.0",
]
release = [
  "bumpver==2023.1125",
]
build = [
  "build==0.10.0",
]

[project.urls]
Repository = "https://github.com/novonordisk-research/OptiHPLCHandler.git"

[build-system]
requires = ["setuptools>=0.64.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "@abstractmethod",
    "@abc.abstractmethod",
    "def __repr__(self):",
    # re-enable the standard pragma
    "pragma: no cover",
    "if TYPE_CHECKING",
]
precision = 2
omit = [
    "tests/*"
]


[tool.isort]
profile = "black"
skip = [".gitignore",".git",".env","venv","env","ENV","env.bak","venv.bak"]

[tool.pytest.ini_options]
pythonpath = [
  "src"
]

[tool.bumpver]
current_version = "2.0.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
tag_message = "{new_version}"
tag_scope = "default"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{version}"',
]
"src/OptiHPLCHandler/__init__.py*" = ['__version__ = "{version}"']